{"version":3,"file":"static/js/15.d390f229.chunk.js","mappings":"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","sources":["components/UserCard/UserCard.styled.js","helpers/storage.js","components/UserCard/UserCard.jsx","components/TwwetsList/TweetsList.styled.js","Redux/user/selectors.js","components/TwwetsList/TweetsList.jsx","pages/TweetsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Logo = styled.img`\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n  display: block;\r\n  opacity: 0.7;\r\n`;\r\n\r\nexport const CardImg = styled.img`\r\n  display: block;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  margin-bottom: 18px;\r\n`;\r\n\r\nexport const CardLine = styled.img`\r\n  display: block;\r\n  /* margin-bottom: 62px; */\r\n`;\r\n\r\nexport const AvatarWrapper = styled.div`\r\n  position: relative;\r\n  margin-top: -50px;\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nexport const EllipsFrame = styled.img`\r\n  display: block;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  display: block;\r\n  position: absolute;\r\n  top: 7px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 66px;\r\n  height: 66px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const UserName = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 65%;\r\n  font-size: 20px;\r\n  color: #5cd3a8;\r\n`;\r\n\r\nexport const Tweets = styled.p`\r\n  display: block;\r\n  margin-bottom: 16px;\r\n  font-size: 20px;\r\n  color: #ebd8ff;\r\n`;\r\n\r\nexport const Followers = styled.p`\r\n  display: block;\r\n  margin-bottom: 26px;\r\n  font-size: 20px;\r\n  color: #ebd8ff;\r\n`;\r\n\r\nexport const FollowBtn = styled.button`\r\n  display: block;\r\n  width: 196px;\r\n  height: 50px;\r\n  font-size: 18px;\r\n  color: #373737;\r\n  background-color: ${props => props.bgcolor};\r\n  border-radius: 10px;\r\n  &:hover {\r\n    width: 200px;\r\n    height: 52px;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","export const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const load = key => {\r\n  try {\r\n    const serializedState = localStorage.getItem(key);\r\n    return serializedState === null ? undefined : JSON.parse(serializedState);\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const remove = key => {\r\n  try {\r\n    localStorage.removeItem(key);\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n","import { Logo, CardImg, CardLine, AvatarWrapper, EllipsFrame, Avatar, UserName, Tweets, Followers, FollowBtn } from './UserCard.styled';\r\nimport {logoImg, cardImg, lineImg, ellipseIcon} from '../../images'\r\nimport { useEffect,  useState } from 'react';\r\nimport { load, save } from 'helpers/storage';\r\n\r\nexport const UserCard = ({ user }) => { \r\n\tconst [isFollowing, setIsFollowing] = useState(false);\r\n\tlet followers = user.followers;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst userState = load(`${user.id}`);\r\n\t\tif (userState) {\r\n\t\t\tsetIsFollowing(true);\r\n\t\t}\r\n\t}, [user.id])\r\n\r\n\tuseEffect(() => {\r\n\t\t\tsave(`${user.id}`, isFollowing);\r\n\t}, [isFollowing, user.id])\r\n\t\r\n\tconst handleClickBtn = () => {\r\n\t\tsetIsFollowing((isFollowing) => !isFollowing);\r\n\t}\r\n\r\n\tif (isFollowing) {\r\n\t\tfollowers = followers + 1;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Logo src={logoImg} />\r\n\t\t\t<CardImg src={cardImg} />\r\n\t\t\t<CardLine src={lineImg} />\r\n\t\t\t<AvatarWrapper>\r\n\t\t\t\t<EllipsFrame src={ellipseIcon} />\r\n\t\t\t\t<Avatar src={user.avatar} />\r\n\t\t\t</AvatarWrapper>\r\n\t\t\t<UserName>{user.user}</UserName>\r\n\t\t\t<Tweets>{(user.tweets*1000).toLocaleString(\"en-US\")} Tweets</Tweets>\r\n\t\t\t<Followers>{followers} Followers</Followers>\r\n\t\t\t<FollowBtn bgcolor={isFollowing ? \"rgb(92, 211, 168)\" : \"rgb(235, 216, 255)\" } onClick={handleClickBtn}>Following</FollowBtn>\r\n\t\t</>\r\n\t)\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: block;\r\n`;\r\n\r\nexport const CardsList = styled.ul`\r\n  display: grid;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  width: 1172px;\r\n  grid-template-columns: repeat(auto-fit, 380px);\r\n  gap: 16px;\r\n`;\r\n\r\nexport const CardWrapper = styled.li`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 460px;\r\n  padding-top: 26px;\r\n  border: 1px solid black;\r\n  border-radius: 20px;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 250px;\r\n  height: 70px;\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  font-size: 24px;\r\n  color: #179b6a;\r\n  border-radius: 10px;\r\n  border: solid 3px #179b6a;\r\n  opacity: 0.8;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","export const selectUsers = state => state.user.items;\r\nexport const selectIsLoading = state => state.user.isLoading;\r\nexport const selectError = state => state.user.error;\r\nexport const selectPage = state => state.user.page;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchUsers } from '../../Redux/user/operations';\r\nimport { UserCard } from \"components/UserCard/UserCard\";\r\nimport { Container, CardsList, CardWrapper, Button } from './TweetsList.styled';\r\nimport { selectUsers } from \"Redux/user/selectors\";\r\nimport { load, save, remove } from \"helpers/storage\";\r\n\r\n\r\nexport const TweetsList = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\tconst [page, setPage] = useState(null);\r\n\tconst users = useSelector(selectUsers);\r\n\tconst startPageUsers = [];\r\n\tfor (let i = 0; i < 3; i += 1) {\r\n\t\tstartPageUsers[i] = users[i];\r\n\t}\r\n\tlet [currentUsers, setCurrentUsers] = useState(startPageUsers);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchUsers());\r\n\t\tconst loadPage = load(\"page\");\r\n\t\tconst loadCurrentUser = load(\"currentUsers\");\r\n\r\n\t\tif (loadPage) {\r\n\t\t\tsetPage(loadPage);\r\n\t\t} else {\r\n\t\t\tsetPage(2);\r\n\t\t}\r\n\r\n\t\tif (loadCurrentUser) {\r\n\t\t\tsetCurrentUsers(loadCurrentUser);\r\n\t\t}\r\n\r\n\r\n\t}, [dispatch, page]);\r\n\r\n\tconst changePage = () => {\r\n\t\tconst paginationPageUsers = [];\r\n\t\tsetPage(page + 1);\r\n\t\tfor (let i = page * 3 - 3; i < page * 3; i += 1) {\r\n\t\t\tif (users.length > i) {\r\n\t\t\t\tpaginationPageUsers.push(users[i]);\r\n\t\t\t};\r\n\t\t}\r\n\t\tcurrentUsers = setCurrentUsers([...currentUsers, ...paginationPageUsers]);\r\n\t};\r\n\r\n\tconst BackHome = () => {\r\n\t\tnavigate(\"/\");\r\n\t\t\t\t\tremove(\"currentUsers\");\r\n\t\t\tremove(\"page\");\r\n\t}\r\n\r\n\tif (3 < currentUsers.length) {\r\n\t\tsave(\"currentUsers\", currentUsers);\r\n\t}\r\n\r\n\tif (2 < page) {\r\n\t\tsave(\"page\", page);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Button type=\"button\" onClick={BackHome}>Back Home Page</Button>\r\n\t\t\t<CardsList>\r\n\t\t\t\t{currentUsers.map(currentUser => (\r\n\t\t\t\t\t<CardWrapper key={currentUser.id} >\r\n\t\t\t\t\t\t<UserCard user={currentUser} />\r\n\t\t\t\t\t</CardWrapper>\r\n\t\t\t\t))}\r\n\t\t\t</CardsList>\r\n\t\t\t{users.length / 3 > page - 1 && <Button type=\"button\" onClick={changePage}>Load more</Button>}\r\n\t\t</Container>\r\n\r\n\t)\r\n}\r\n\r\n","import {TweetsList} from '../components/TwwetsList/TweetsList'\r\n\r\nexport const TweetsPage = () => {\r\n\treturn (\r\n\t\t<TweetsList/>\r\n\t\t);\r\n};\r\n\r\nexport default TweetsPage;"],"names":["Logo","styled","CardImg","CardLine","AvatarWrapper","EllipsFrame","Avatar","UserName","Tweets","Followers","FollowBtn","props","bgcolor","save","key","value","localStorage","setItem","JSON","stringify","error","console","log","message","load","serializedState","getItem","undefined","parse","remove","removeItem","UserCard","user","useState","isFollowing","setIsFollowing","followers","useEffect","id","src","logoImg","cardImg","lineImg","ellipseIcon","avatar","tweets","toLocaleString","onClick","Container","CardsList","CardWrapper","Button","selectUsers","state","items","TweetsList","dispatch","useDispatch","navigate","useNavigate","page","setPage","users","useSelector","startPageUsers","i","currentUsers","setCurrentUsers","fetchUsers","loadPage","loadCurrentUser","length","type","map","currentUser","paginationPageUsers","push","TweetsPage"],"sourceRoot":""}